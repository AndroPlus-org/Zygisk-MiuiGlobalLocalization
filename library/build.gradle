plugins {
	id 'com.android.library'
}

android {
	compileSdkVersion 32
	buildToolsVersion "32.0.0"
	ndkVersion "23.1.7779620"

	defaultConfig {
		minSdkVersion 26
		targetSdkVersion 32
		versionCode rootProject.ext.moduleVersionCode
		versionName rootProject.ext.moduleVersion

		externalNativeBuild {
			cmake {
				abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
				var configFlags = "-Oz -DNDEBUG"
				arguments "-DMODULE_NAME:STRING=$moduleLibraryName",
						"-DANDROID_STL=none",
						"-DCMAKE_CXX_FLAGS_RELEASE=$configFlags",
						"-DCMAKE_CXX_FLAGS_RELWITHDEBINFO=$configFlags",
						"-DCMAKE_C_FLAGS_RELEASE=$configFlags",
						"-DCMAKE_C_FLAGS_RELWITHDEBINFO=$configFlags"

				cppFlags "-std=c++20",
						"-ffixed-x18",
						"-Qunused-arguments",
						"-fno-rtti", "-fno-exceptions",
						"-fno-stack-protector",
						"-fomit-frame-pointer",
						"-Wno-builtin-macro-redefined",
						"-Wl,--exclude-libs,ALL",
						"-D__FILE__=__FILE_NAME__",
						"-Wl,--strip-all"
			}
		}
	}

	buildFeatures {
		prefab true
	}

	externalNativeBuild {
		cmake {
			path file('src/main/cpp/CMakeLists.txt')
			version "3.18.1"
		}
	}
}

dependencies {
	implementation 'dev.rikka.ndk.thirdparty:cxx:1.2.0'
	implementation 'dev.rikka.ndk.thirdparty:xhook:1.2.0'
	implementation 'dev.rikka.ndk.thirdparty:nativehelper:1.0.1'
}

task extractLibrary(type: Copy) {
	from fileTree("$buildDir/intermediates/cmake/release/obj")
	include "**"
	into "$buildDir/outputs/library/"

	outputs.upToDateWhen { false }
}

task extractLibraryDebug(type: Copy) {
	from fileTree("$buildDir/intermediates/cmake/debug/obj")
	include "**"
	into "$buildDir/outputs/library-debug/"

	outputs.upToDateWhen { false }
}

afterEvaluate {
	extractLibrary.dependsOn assembleRelease
	extractLibraryDebug.dependsOn assembleDebug
}
